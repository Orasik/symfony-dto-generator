<?php
/**
 * DTO {{ element.name|capitalize }}
 */

namespace {{ namespace }};

use JMS\Serializer\Annotation;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * {{ element.name|capitalize }}
 * 
 * @Annotation\ExclusionPolicy("none")
 * @Annotation\XmlRoot("vendorOrder")
 */
class {{ element.name|capitalize }}
{
    {% for node in element.nodes %}
    /**
     * @var {{ node.type }}
     * @Annotation\Type("{{ node.type }}")
     * @Annotation\SerializedName("{{ node.name }}")
     * @Annotation\XmlElement(cdata={{ node.cdata }})
     */
    private ${{ node.name }};
    
    {% endfor %}
   
    {% if element.firstElement == 1 %}
    /**
     * @var string 
     * @Annotation\Exclude()
     */
    private $token;
    
    {% endif %}

    {% for node in element.nodes %}
    /**
     * Set {{ node.name }}
     *
     * @param {{ node.type }} ${{ node.name }}
     *
     * @return {{ element.name|capitalize }}
     */
     public function set{{ node.name|capitalize }}(${{ node.name }})
    {
        $this->{{ node.name }} = ${{ node.name }};

        return $this;
    }

    /**
     * Get {{ node.name }}
     *
     * @return {{ node.type }}
     */
    public function get{{ node.name|capitalize }}()
    {
        return $this->{{ node.name }};
    }
    {% endfor %}
    
    {% if element.firstElement == 1 %}
    /**
     * Set token
     *
     * @param string $token
     *
     * @return {{ element.name|capcapitalize }}
     */
    public function setToken($token)
    {
        $this->token = $token;

        return $this;
    }

    /**
     * Get token
     *
     * @return string
     */
    public function getToken()
    {
        return $this->token;
    }
    {% endif %}
}